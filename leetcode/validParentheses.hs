-- https://leetcode.com/problems/valid-parentheses/description/
-- ans generated by ChatGPT

isValid :: String -> Bool
isValid s = checkBrackets s []

isOpeningBracket :: Char -> Bool
isOpeningBracket c = c `elem` "({["

isClosingBracket :: Char -> Bool
isClosingBracket c = c `elem` ")}]"

isMatchingPair :: Char -> Char -> Bool
isMatchingPair '(' ')' = True
isMatchingPair '{' '}' = True
isMatchingPair '[' ']' = True
isMatchingPair _ _ = False

-- string, list(stack) of open brackets -> result
checkBrackets :: String -> [Char] -> Bool
checkBrackets [] [] = True
checkBrackets [] _ = False
checkBrackets (x : xs) stack
    | isOpeningBracket x = checkBrackets xs (x : stack)
    | isClosingBracket x =
        case stack of
            -- check stack
            -- stack is empty, but string is not => invalid
            [] -> False
            (top : rest) ->
                -- check if top of stack(last item in stack) matches closing bracket
                isMatchingPair top x && checkBrackets xs rest
    | otherwise = checkBrackets xs stack
